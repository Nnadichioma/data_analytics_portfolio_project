<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='Covid_AnalysisTableauDashboard' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (EXCEL FOR TABLEAU TABLE 1)' inline='true' name='federated.0wbaiaq0ea9w1v1gduwck1ftt7v2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='EXCEL FOR TABLEAU TABLE 1' name='excel-direct.0x0evam16tju681bd6j8605170hg'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/User/Documents/EXCEL FOR TABLEAU TABLE 1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0x0evam16tju681bd6j8605170hg' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_F9A44E611B44444C8C78D9ABA03F6F28]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_F9A44E611B44444C8C78D9ABA03F6F28]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_F9A44E611B44444C8C78D9ABA03F6F28]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_F9A44E611B44444C8C78D9ABA03F6F28]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/User/AppData/Local/Temp/TableauTemp/#TableauTemp_1jdc6qe0bt2t0h1cfodto0tn5lrh.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/12/2025 12:49:24 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_F9A44E611B44444C8C78D9ABA03F6F28'>
            <properties context=''>
              <relation connection='excel-direct.0x0evam16tju681bd6j8605170hg' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (EXCEL FOR TABLEAU TABLE 4) (2)' inline='true' name='federated.131jkda1xc7s1j146xyla1fb0dv4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='EXCEL FOR TABLEAU TABLE 4' name='excel-direct.07qnues0utgmg514lzk7c1jg6hdz'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/User/Documents/EXCEL FOR TABLEAU TABLE 4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.07qnues0utgmg514lzk7c1jg6hdz' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='Date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_C9E75B3EEF504E0DBE6C957D074FC56B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_C9E75B3EEF504E0DBE6C957D074FC56B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_C9E75B3EEF504E0DBE6C957D074FC56B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_C9E75B3EEF504E0DBE6C957D074FC56B]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_C9E75B3EEF504E0DBE6C957D074FC56B]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_C9E75B3EEF504E0DBE6C957D074FC56B]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/User/AppData/Local/Temp/TableauTemp/#TableauTemp_0bdwdru0zq94lq1goeal30c26ce0.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/12/2025 12:54:26 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>289</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1428</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17308</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28317</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_C9E75B3EEF504E0DBE6C957D074FC56B'>
            <properties context=''>
              <relation connection='excel-direct.07qnues0utgmg514lzk7c1jg6hdz' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='Date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (EXCEL FOR TABLEAU TABLE 2)' inline='true' name='federated.1l6zhld1beis0n1d3ttdu1hmxpu2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='EXCEL FOR TABLEAU TABLE 2' name='excel-direct.0bmdjtq135whlv15n1qt218206dy'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/User/Documents/EXCEL FOR TABLEAU TABLE 2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0bmdjtq135whlv15n1qt218206dy' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_234FEBFF21084020826C2F57BD80F1DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_234FEBFF21084020826C2F57BD80F1DD]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_234FEBFF21084020826C2F57BD80F1DD]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/User/AppData/Local/Temp/TableauTemp/#TableauTemp_0pjpmn00yfz67612ut0471z0k5z7.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/12/2025 12:50:11 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_234FEBFF21084020826C2F57BD80F1DD'>
            <properties context=''>
              <relation connection='excel-direct.0bmdjtq135whlv15n1qt218206dy' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (EXCEL FOR TABLEAU TABLE 3)' inline='true' name='federated.1pvivcb0dm4eh21fp8duu1smzw3p' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='EXCEL FOR TABLEAU TABLE 3' name='excel-direct.16xl4mk199xf5414tyr3914n2w53'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/User/Documents/EXCEL FOR TABLEAU TABLE 3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.16xl4mk199xf5414tyr3914n2w53' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_02C6891724964E37ACCB43E4AC2CE08D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_02C6891724964E37ACCB43E4AC2CE08D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_02C6891724964E37ACCB43E4AC2CE08D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_02C6891724964E37ACCB43E4AC2CE08D]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_02C6891724964E37ACCB43E4AC2CE08D]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/User/AppData/Local/Temp/TableauTemp/#TableauTemp_0cv57em0u7ueoi19r4sub0rw6plt.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/12/2025 12:52:38 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <object-id>[Sheet1_02C6891724964E37ACCB43E4AC2CE08D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_02C6891724964E37ACCB43E4AC2CE08D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_02C6891724964E37ACCB43E4AC2CE08D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_02C6891724964E37ACCB43E4AC2CE08D]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_02C6891724964E37ACCB43E4AC2CE08D'>
            <properties context=''>
              <relation connection='excel-direct.16xl4mk199xf5414tyr3914n2w53' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (EXCEL FOR TABLEAU TABLE 1)' name='federated.0wbaiaq0ea9w1v1gduwck1ftt7v2' />
          </datasources>
          <datasource-dependencies datasource='federated.0wbaiaq0ea9w1v1gduwck1ftt7v2'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wbaiaq0ea9w1v1gduwck1ftt7v2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wbaiaq0ea9w1v1gduwck1ftt7v2].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wbaiaq0ea9w1v1gduwck1ftt7v2].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0wbaiaq0ea9w1v1gduwck1ftt7v2].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0wbaiaq0ea9w1v1gduwck1ftt7v2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0wbaiaq0ea9w1v1gduwck1ftt7v2].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0wbaiaq0ea9w1v1gduwck1ftt7v2].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0wbaiaq0ea9w1v1gduwck1ftt7v2].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0wbaiaq0ea9w1v1gduwck1ftt7v2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0wbaiaq0ea9w1v1gduwck1ftt7v2].[:Measure Names]' value='138' />
            <format attr='height' value='70' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.0wbaiaq0ea9w1v1gduwck1ftt7v2].[Multiple Values]' value='*' />
            <format attr='text-format' field='[federated.0wbaiaq0ea9w1v1gduwck1ftt7v2].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.0wbaiaq0ea9w1v1gduwck1ftt7v2].[sum:total_cases:qk]' value='N' />
            <format attr='text-format' field='[federated.0wbaiaq0ea9w1v1gduwck1ftt7v2].[sum:total_deaths:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#55aaff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#b4b4b4' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='1' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0wbaiaq0ea9w1v1gduwck1ftt7v2].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.5492265224456787' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0wbaiaq0ea9w1v1gduwck1ftt7v2].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C3BCB678-519A-4A3B-A952-2F2BF41898DA}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Death Count Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (EXCEL FOR TABLEAU TABLE 2)' name='federated.1l6zhld1beis0n1d3ttdu1hmxpu2' />
          </datasources>
          <datasource-dependencies datasource='federated.1l6zhld1beis0n1d3ttdu1hmxpu2'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1l6zhld1beis0n1d3ttdu1hmxpu2].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1l6zhld1beis0n1d3ttdu1hmxpu2].[sum:TotalDeathCount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1l6zhld1beis0n1d3ttdu1hmxpu2].[none:location:nk]' value='159' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1l6zhld1beis0n1d3ttdu1hmxpu2].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0544751882553101' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l6zhld1beis0n1d3ttdu1hmxpu2].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1l6zhld1beis0n1d3ttdu1hmxpu2].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{26C20FA0-A706-4D5C-962F-F5636D8091AB}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (EXCEL FOR TABLEAU TABLE 3)' name='federated.1pvivcb0dm4eh21fp8duu1smzw3p' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pvivcb0dm4eh21fp8duu1smzw3p'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1pvivcb0dm4eh21fp8duu1smzw3p].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1pvivcb0dm4eh21fp8duu1smzw3p].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1pvivcb0dm4eh21fp8duu1smzw3p].[none:Location:nk]' />
              <color column='[federated.1pvivcb0dm4eh21fp8duu1smzw3p].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.1pvivcb0dm4eh21fp8duu1smzw3p].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1pvivcb0dm4eh21fp8duu1smzw3p].[Latitude (generated)]</rows>
        <cols>[federated.1pvivcb0dm4eh21fp8duu1smzw3p].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2F562ADF-33E0-4ADA-9156-A52405FA8B7F}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (EXCEL FOR TABLEAU TABLE 4) (2)' name='federated.131jkda1xc7s1j146xyla1fb0dv4' />
          </datasources>
          <datasource-dependencies datasource='federated.131jkda1xc7s1j146xyla1fb0dv4'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.131jkda1xc7s1j146xyla1fb0dv4].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.131jkda1xc7s1j146xyla1fb0dv4].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.131jkda1xc7s1j146xyla1fb0dv4].[tmn:Date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.131jkda1xc7s1j146xyla1fb0dv4].[tmn:Date:qk]' value='245' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.131jkda1xc7s1j146xyla1fb0dv4].[none:Location:nk]' />
              <text column='[federated.131jkda1xc7s1j146xyla1fb0dv4].[none:Location:nk]' />
              <color column='[federated.131jkda1xc7s1j146xyla1fb0dv4].[none:Forecast Indicator:nk]' />
              <text column='[federated.131jkda1xc7s1j146xyla1fb0dv4].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.131jkda1xc7s1j146xyla1fb0dv4].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.131jkda1xc7s1j146xyla1fb0dv4].[tmn:Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{B42A88A7-ECE4-4EB8-86F7-4ECA80AF3DF0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='9' param='horz' type-v2='layout-flow' w='99034' x='483' y='999'>
            <zone h='98002' id='7' type-v2='layout-basic' w='89378' x='483' y='999'>
              <zone h='24500' id='3' name='Sheet 1' w='41038' x='483' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='34301' id='5' name='Sheet 2' w='41038' x='483' y='25499'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='58801' id='6' name='Sheet 3' w='48340' x='41521' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39201' id='11' name='Sheet 4' w='79722' x='483' y='59800'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39201' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.131jkda1xc7s1j146xyla1fb0dv4].[none:Location:nk]&#10;[federated.131jkda1xc7s1j146xyla1fb0dv4].[none:Forecast Indicator:nk]' type-v2='color' w='9656' x='80205' y='59800'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98002' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='999'>
              <zone h='9114' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.1pvivcb0dm4eh21fp8duu1smzw3p].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9656' x='89861' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='15' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
                <zone fixed-size='188' h='24500' id='3' is-fixed='true' name='Sheet 1' w='41038' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58801' id='6' is-fixed='true' name='Sheet 3' w='48340' x='41521' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9114' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.1pvivcb0dm4eh21fp8duu1smzw3p].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9656' x='89861' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='34301' id='5' is-fixed='true' name='Sheet 2' w='41038' x='483' y='25499'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39201' id='11' is-fixed='true' name='Sheet 4' w='79722' x='483' y='59800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='39201' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.131jkda1xc7s1j146xyla1fb0dv4].[none:Location:nk]&#10;[federated.131jkda1xc7s1j146xyla1fb0dv4].[none:Forecast Indicator:nk]' type-v2='color' w='9656' x='80205' y='59800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FF33ED75-016F-4A59-9519-8817D827251D}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wbaiaq0ea9w1v1gduwck1ftt7v2].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{171F585E-86FA-4B95-897B-2E5BB82863BD}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l6zhld1beis0n1d3ttdu1hmxpu2].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA3FECFD-B72B-431D-AEB6-0B296A74AAEC}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pvivcb0dm4eh21fp8duu1smzw3p].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pvivcb0dm4eh21fp8duu1smzw3p].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DF0EABFD-0045-4E81-94D3-6976768B636D}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.131jkda1xc7s1j146xyla1fb0dv4].[none:Location:nk]&#10;[federated.131jkda1xc7s1j146xyla1fb0dv4].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.131jkda1xc7s1j146xyla1fb0dv4].[tmn:Date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.131jkda1xc7s1j146xyla1fb0dv4].[none:Forecast Indicator:nk]</field>
            <field>[federated.131jkda1xc7s1j146xyla1fb0dv4].[none:Location:nk]</field>
            <field>[federated.131jkda1xc7s1j146xyla1fb0dv4].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ECAABA82-8669-4705-A115-7C1457C5D128}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.131jkda1xc7s1j146xyla1fb0dv4].[none:Forecast Indicator:nk]</field>
              <field>[federated.131jkda1xc7s1j146xyla1fb0dv4].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2CBBE389-6DBA-4BA6-B324-9468A3CAA974}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29aXBd133g+bvL2/cFOwEQAEFAXESJIkXaEiVZcrxEnbbTSduJu7p6Kt3V
      NVMzVfNpvvv71NTMVHVNdzLVNXFVYjudduLEjpbYtERt1MJ9x74DD3gPb1/vdubDw0rikQRF
      QgR5fyjUfe++c8/533v//7P+zzmSEEJgY/OUIn/VAtjYfJXYBmDzVGMbgM1TjW0ANk81tgHY
      PNVsMgAhBIVMkvPnL5ApVBCWxdjY+B0XjY6ONYwwn5xlKVcBwKiVmFlIAlAt5SnXjPsSanp8
      jJp13/dg8zQhBKND17l24yaV+9Snu7HJAJZnh3j7zAX27GlnanIShMXQ8ChCCEzDwDBMAIaG
      hjB0HcsSCCGwLAvDMBBCkFuaIZGtG0ApMc6f/+XPKWomC2NXmUwWWe11FUKs/Fvouo4QYu04
      OTpERTMwTWslrIWmaRuuEWtpr6Zr85QgLM58+BFYBn/7s59RtQSmaaCv6OZGHVnVzfrRRNN1
      hKiHsUwTwzBRN8b96flb/KvvfY/M4jxNTbG188npm3xwaQqvKLHv2DcoZpc4+9mnTEzM8Sc/
      +td8/uF7VKtVPM19dLk2y/vqqRf56OMvGFiJ7p133+W73/kOp999h5df/Rr/31/+nP6eDsbm
      MvR1RHDE+jBrZT779CyZuSle/xd/yBfvvUM43kTZdBFzFBiezdLVN0hm+jq+SDOdfQfo62x5
      tA/e5rEhFGvm4MFDJMZHyaTm+OjjS4QdGl1HXuPmp2+jGTIvvvIqX3xwhkhzM0eeP8KZ02do
      ivrwNvezMPw5vnArC7NTm0sASwgkQKtV+d3p99fOX742zh/8y+/y7TffZOzGJfzhZk69fIoX
      +qLMLpfRNBPdNJmfm79DWE+4Da+eYrmk1dNYydUtywIBPQPP8torL7O3t5/XTr1EtZhHdXn5
      +kun+PZrz3PrynWml7KYFiSXFrB0naMvf5Ovv3CIWDRKqVzF6XI+uqdt89ixNDfFB2feJ7z3
      AIs3LqJ4Aji8PmYmJ9BMhT/6kz8lUF1kz3Ov8M033kCkJskaKpLqYmFuGsUT5I03vsFgd9Nm
      A3jx2T5++c4HhGMtKLK0dr67LcS14VlmR68RaulG16qUS0VuzWQI6vPUvG08+0w/0h2i1vna
      yy/zyQcfAWDpNUqlAjNziw1v0DINSqUSFy8P07O/j1g4wgvHjnH8+cOgOgn63IBFS+c+3njt
      a5z77PMv/VBtdg/NHXt59bVvcOzZAdo6O/EHIrzw/FEG9nXjCwRRJAg0dzA3fI18dhk5ECcS
      CHDshaMcfqZ/U1zS7a4QqYUZxmcTdPfupzkaJJPJEomEuXX1AhXZz/OHBkjOTzM9t8je/c8Q
      C3q5cfk8sr+JllgYn1PGUDz43A6MaomSqRLyuUjMTROMt6MVklwfmWbv3r20NcfIFcqEA16y
      hTLhgIdsoYJs1RibmKKpfS+dbXEKmSS3RifZu28Qt2Li8gZxqjKJmXFGphI898IxAh67FHgq
      EIJUOk08Flv7Pj0xQjJX5dDhQ5TyWaLRKADLi7NMzKU4fPhZckszTC8sM3jwEFqlSDQapZBL
      32kANjZPE/Y4gM1TjW0ANk81a92gQsDPr32Votg0wqnAHx34qqV4PNB1HcuymCnUqKKAsEBq
      nI8LvYbkWOmbFwKkzV016wYA/P2t7Qtk5OewalXUcCeyw4kQ9e5NSa4LZRYXkbwtSBhoyTEc
      8X3IirL9hBqlX0hgVUsowQ4UlxtWBtckWVn5fQkl0IyZX0BILlR/BOm2hyBMA6EVwBFEVu+U
      Tegl9FwKR7Rz7b42XousYJaWUf1xEAI9O43kDKP6Qvd1D8I0kBS14e8+h20Aq1iWhcvlIvfR
      T/lvnm8ivEFgdcBUIJWyCF8IkFBmruOYuYrWf5K+9HkOM841uY/htteRsFBKGZQf//jHP4a6
      Afz3G9sXyCwmKI18iuoPUp68gKjOUrh1BcUFlfkhrMI4cmA/1dG3kNzNYJaoTJ1HUlQqM1eQ
      FJnK1EUkRaIycxUl2L4tA7GqKQo3z+CMNFMZ/xxh5MheOo3q91NLTqMvDeFs7qd0/ddQXcLQ
      JLTEJZBdVGfPY+kG+XN/hYROJTGKpDiozVxA9jYhO+o9S0biM2q5CtXZS0hWET2XxqosUlua
      ojL8FsIZpTL0FpYp4wi3Urz6D2iLI0gOhVpyBswStaVJjMw4wrKozp4HxUN14ixGNU/h/N+g
      hlqpzJxHcgapTp7F1HSM9AhmtYY3FOX7g9t/N08ipmmiqiq+hfcZGZmkGO5BKA4AxMQV3pj7
      KTnTTcXbxMHrf8Wfds5xsRDjpHGRo7EKi7qPhKeb/5D+C4xM8su3AdRwJ2p4D1piBG93L3o2
      h6t1ELOcxVwexaqPUGOZAmdzL0IrgpGjlprDqmSojH2IpRXQ0vNYlSxC17eXfqgDR6gDPTWC
      u/Mw2vICrpZBMCtoS8OsdnFJziCutn602bNohRJa4hpCKGjLEzibB1A9fjwd+6ktjmPWCpi1
      6qZ0HPEBJEVQnvgMLT2JVc6iJUdQAntwNfegRvdhFusDgcKo4mjaT2XyU4zlSaqJG7jaejGr
      AslIoOVLaMlb4Axj5hZxtgygKBYgKA+9Dd5O9ORNKtOX0ZanvuQbejK5sqTwg/A1Oq/8nOjs
      F/iv/4YT1S/wSTrZUA+tE++RdbeQrCg40rM4JYMLKTeX/cfoW/6CgGIwnZNpXO7eL5KKq6kX
      xSlRmR3Ds/81ajPXkLxu1FgfjkgrsgK+3hcpD7+PI9SE5G5CDcQxJANH7Dn01CSqPwbi7lWB
      rZFxtuzD4fdTnr6Gp/dlavNXEfhxNu1bq4aogTCVxSTBo39MZfIcarAZI7+MM96HqC4hnDFU
      TxRn1MAqL67l/gBysJvq9Ke4u7+OKExhWg4kKjjj+3BF42hLEzjjvQirbrze/jdwNu1D83sx
      imWUcDOyM4ziVRBqK85QFTW6F0l2ghHDqqUxqlUkxYN779epzZ5HyEE8XUfAEf3Sr+hJ5Hib
      Ri0t+EHLJOnKDA6X4KNkiH0dJqYlKEb7+BP1PJ1ek8NGhgk6uBl/iVLTAKdG30N1CSxDXx8H
      sITg/3xr4qu+LwCKxQJ+f+CrFuOrkUPoaIsjqPF+ZLVetDsV+I/f6MDlct3j4iefWq220gb4
      P9AyE/icEiBAKPzzbIBvdhT4c/O7LO75Gu7lCb4z8xPOOw7jWJ5i6vAPMYIt/PH4/81Bf46/
      H/evlwASMMjNr+7ONnB14iqDhw9/1WJ8NXJIQKsEjK6fM6FWi9sGsIFzCTe9QsbnoN6zIwm+
      1ZlHQsJby4MQVKLd/Er7EU69xH/wXeLs8nt8Ef43fFDto1i6zrc78/Y4gM3upBRo48NqHz9J
      H2Ey74CV1p5A8Ir5Bb7ZS1iJScy2/SiYeBSLAWkGCmm0+F6iahVZEg+hDWBj8xWgSQ6+5p5A
      lQROVVA3gLoRdLjLvLb4d7wV/B6iEMKqltGcoJhVrMQE2f4X+GvdRdP8ebsEsNmdJKMHuWD2
      kMZPxGMhBCxXZE7PhShqEp+lYxhOH/um3uXY8mn+r8UTyJbBM9NvoYxfQO4cwGrpsUsAm93J
      G9lfs6DP8VFxD9myyaKzg2RR0EaS/1J4FdHhRnK4WRZ+OpwuLH8rJcvFyU6Lvfm3+WhexVkr
      2CWAze6k01+jbCrMunv4rf9bjKQVCktJng+leUm+ijsYwFNL46mmUawax2rnGQxX6Q7qHIxU
      qCwleL58bnslgKnXSGWKNMcjDN+6jsMfozXsZmohzf79fSiSxOLcFMlsiY7WZmbnF/AEIuzr
      7mBmbp7OPR0IIZidGkdyB/EqBnOJJMFInGohQ00X9A8+80APpFbKMzY1S3N7F/GwH71WIVus
      Egv5GBkdJdrSiVvSmE/m6N/XgyxJJGYnydVgX3c7I8Oj7OnZh1XNM5vMMtjf90BybJdsapG5
      pSz7B/fjkKBSylG1HIQDHhKJRdra2nZEjt3IK21ZThhvo8pQ2QM/S0q0BgTtwRQvWf8N2Q10
      SszmJXL6EoosIyET8gheKdzkUKi6vRIglUqymEhg1HKYUoDuPa2MTM7Q3RpgbHIBECymcwzs
      308kFufAQB/VSpVMco6rY/URTa2Upmy4KSzO44u10b+3g6pmMfDMARyShaI8WKGkON3s6+th
      ZnISgFKlymJihsW5KbzRdmYmRpmYnKM9JDOeyAECXyiGqOS5efMGHb37GBsaZmR8ku49HQ1n
      tz1sFJeXjpiDmfk8IFhaWmIpmaBSyDE6PbtDUuw+DFF/Qy5VoMjgd8HJboFh1RvCirzSOyoJ
      OkOCw/H6lFyBAAFfi6T5NB3dngG0tHXgVGVk1Y0i17h48SoAqupEWAaWJYiF/IzcvMR8tsrw
      yBj7+roYHp3ELOdI50s4PCFa4r61TquxyRn69nZQTC/iCDXjVB5M9WRFIZ3O4HSqWJZFOBxB
      VSSEJFErZFBdLoQETqcDwzCxLMH05DhNHV04ZBmHqiLLUC7mmBu7xnyu9kBybA/B4vw0ZYL0
      dASxhMSePXuQJPAGI8RCvh2QYXeiSHfO4zrcxgb9kZCQV47r5wxT8O6Ul5wmc2NZ3V4VaHZq
      jHyxQDpbQNd1ok1NhN1wY3SGvr3tjEwt4DB0TNlHc8CB0tyG2+nkxNdfJrm8jFJNM1v2oWUT
      uCNNOCyN5va9qLJExZDo+RIrOxSzaVLLaUKxZq5fv0FrU5h8vkxTUxvL8wuEos34FJ2b01l6
      OiJMzC+h1zTmZ+fp7e1m6NplOvbuJx71k8yU6Qm6SD+wNPePaegsLy3gcavoNYtsapZcRSeZ
      XKKYLzI1t0h3h73ixe1ICMRdy2mx5ge2+klCoCqCk61lfpuIcry5vO4KIYTgrbfeemCBLMtC
      kuW7imRZFrJ870Ln6tWrHH7QEVghsIS4azqWZSFJ8u2u4Q9XjofMqVOnCAaDX7UYXzmrrhCV
      T/93rNztrjsrbhGNEBKGBVeWvZwJfYs/qL7z8LpB70ex7yfMl0aSkO+h2Tsih80jZl3RV2e1
      S2vVoq0NQSD4YMbNR0f+V0Styke5/fY4gM3upWLKqJKgJhQkBD7FoD7Ld+tS4PqSwqctf4Bw
      +cEdYPLQD+1xAJvdiy5kMqYTh2StKD/UZ4fdaQCGBae930Trfn5tWqQkSXYJYLM7MZFQJEFE
      ruGQt8rxBWxokY4V/WS6T94xHdY2AJtdiYyFV1mdPbiu1PW+IWnt2ypTohXJ6b4jnk0G4PF4
      HrqgD0Jzc/NjIcvjIgfYDfe7IW6r8mw2gjoRcrhS49TivZvOr0+IkSRef/31Ryimjc3OcLvy
      AxwPLVFd/idOx/6XTdUguwpk89TQqyxijfxn5tUOhvd8C5we2wBsdidb5fL3oiNg0M4UiGk+
      np7no9ibtgHYPHls1QbYhCR4KTDJwcJf2OMANruTdf8eeeVf2vL3sqlgbWgjbwwXcRm2Adjs
      TjZ6eK7+1w1BWfECrWMImZpVX2lQrPytIhC2AdjsZjb2968awboxAPgVA100VnPbAGx2LbdX
      etbPS2u/yhJ4ZPO269bnCNiNYJtdyci8RXHRpO77s+r9uVXDt75cSsWEI90SbgdUTRjLOOmL
      arYB2OxOOrIGerLuCrG5Abz5s7QydUYTFjMpiQWPhytNR0j1vErv7GnbAGx2Kxv9fxp9W2/y
      OiVoweJa1UdvehFv5TQF1R4Is9ml3J7nr+71WHdz2GwS9VJARpEEv8cSlJb4ML/M1VCv3Qi2
      2d3c0f/fYEbkeu9Q/ZiM9fDtwpBtADa7l43KL0nSyv/tocSGQbMVI5AkitEOZPlhbJBhY/OY
      sHF0eCOrDeHVbwCvT5yhTZRtA7DZ/azt9b66VwZik8uzWNlEbx2JTsog2eMANk80t68OIW47
      bhwJFoJrl87xySefcPbsWWYXNy8LJYSFad5uSYAwuTU0vPZ1+MZlPv/iPJlC+Z7imaaJtWK9
      t27duTuNsExuXrvExSs3MK0GrZstERjGxtE/g4uff8bn5y6QL1UbXrUx3aHrlzl/6do90zUM
      AyHqudDMzPQ2ZARhWZjWFs/UZttIkrTFXPitlH/jmdt8gWJNzUxdvYq/tRW/142h1UinM5iW
      oJQa5zcfXKRSrWEaOtlMhppmgLAYH59ci+PcuYs0xSJ8+O4/MLaQRQiLbCZNVdMRQlAuFcjl
      CwghuPDhPzOxkEUzTMbGx8jnslSq2lpcH/zm1+iOME0RP7phUa2UyGTzCCEwdB0h6iurWZZA
      17S167Valrff+h2lcmUlphqXrozSFAvz63/8JZopKBXzFIplBPXNl7VaFX3FwD8+/RZlOUBb
      1E/NFNSqZTLZ3Fq61UqZbK6AsEzeefstCsUClgCn04VlGtRq9edmrexZvH7/FlqtRiadxjAt
      lkYv8uGlMaq19Xu22T7ShlUetkasjAffaQTrVSBJoq2ji6ZYjK6eHoKWzt/97S/o7e9jNlWi
      P2YwPDRP154YQaVGIlPi5sgE//YH/3JThG6vn57eXrra47z1/nlSwyZKsInJsQn+4Hu/z9Ur
      V9DKeZzxXibHx5ituPAef4Hk3CS3RtoYHZviRz/8V4BBuizz6sBeACq5BL8+/TndLUFqzjhW
      Zpbjr3+HsXMfExl4kdO/+AnPHDnO6OQMr724n5GRYdq6Ozh2pL7DdCAco6uri+uXL7E4cZOr
      U8s4a8v0vfA6n7/zc9RAE6+88R2aQh6SRYOXnulFAvRSil+89RH7OuMULB9KfoqKO4axNMnB
      V95kZGSEQDDE0RMvc+HCRU4ONvE3H89wtNdPWe7Ao82hBJoZHx3le987xX/9z7/kxZcOk8jq
      tLDIUEJmT8zHvu72L6kGTxfGSql7u9Jv/r55UOz2M9IdzeUNmKUE/tZneP7ocWS9RO++fg4c
      ep4D/XvJ5XJk0ynmE4sNBRTCRJJlRicmKBdyCL1IJlckk82TKxRZSqXZ37+fE18/RVs8RFNH
      Dy8ee4Gw37UhjnWLnR8b4/DJV3jxpVfJL01hCatu1aJu1/G2bl48foyQz0l7914GBw+uKT/A
      wvQYH3/0Ef1HTjA+OowsDBRVYWFhCcUb5g//8Ps0hTzr6a4kvTB2gwMnXufYyZcpZ+YRkouX
      Tr3Eof49lCw3g4ODvPLKqwRcMpawQAiePXaSYyeep5rNMjYxQbmQhVqBbFWw7+BzHDv6ApJZ
      pb+/n0NHT9jK/wC8F+zjRsTNiKVQscASkDOhvFaj3FzfbzRBpmEjWPY2UVj6guRSEzVTQXb6
      yCZvksvvZXh8mpdPvcyt8TvrvNVygZHhW1y/fJlj33iTISNHe3cfzbEwtdQUaqSTTkeOiRz4
      fG6mp6cJ7duzpWgtQYXPLt8g4lGItLTx6bWr+KtxHP44Tj1FIpFgeHSCE4MnbrvWSam4zHIm
      RyxS3ye4rWsfr7z6GgDuygJjeZX+ti5kT5TsnG/TcortEQ+fXrxOk08m2trDuS/OE6cT2RUC
      s7ApJQcGs4lFmuNNW9yDRGtzS/3+I2G8jtuk9PlJDk2R7w4T9NsrQW+HVN/XiGjnON9ylO+o
      n7BcFjh9ElVNoA9VCawsnbv6Wut5moQAEpaTIipxquuL465SzOXwhEIoQCGbYnRijsGDB/E4
      FOanxzGdQcIeiYmZRdr3dBAPhygUiwQC9f10F+dnKFR02jv24HU7sUyd8bFx3IEoHa1RRm7d
      xBtuJhz04/M4GR4aoqWzF0XoBAJBCvkCgWBgRWiL2akJNOGgZ28nqYUZEpkyB54ZQGhlbgyN
      0trWTjQWo1oqEQgGyBcKBAMBlhfnSJct+ns6AYtcrkQotLrnr2BhZopCTdDXu5dyqUAgsHHh
      WcHs1AQVU6Gvp4v04ixzyQIHDz5DrVTE4/djVEtYqhfVqnJrZJx9AwfQqiV8LoWacOBxShSL
      Gn6vg7GxMVyBKHtaohRLGgG/h3yxSMDvZ3p8GFeohdZ4+FHqyxPD6uK4/2m4iDX0LpVcgTf8
      VxloWVkjSMDNWwa6AZ6UTodhkjdlPgwPkmgdJJBLMO1rg4FjqJmFOw3AxuZxZqMBTE5P8e3k
      T/jM9wZ/5PotewI1kNarO4vLFtUvyvxt26uUXvwXSLJyR3y2K4TNrkWKdfC7ln9HePkGP699
      h7LOpt7OpqhEvtuNFm/fUvnBNgCbXYwkSRiRdnRPBEMz+KvMa9TMjS4R0NOjYkQ7GsZhG4DN
      rkaSZOYHvo8RbCHR/Tp/lz25Yb8AiYohIxyb1wQVwkKYBsK0V4XYEaqlHBcuXsW87bwQJtWq
      RrmcbXitsAyqNb3h7zZ1RRfNPQCMy71oxnopEPGYRIsbdpKpFnlp4i947tZfgGXavkCPHsG7
      7/6G4ydPMTl0ldGpJfq72xibmiYUDfD55xP86x++xtC1GyykShwY6GRseonuthjjUzOEIh4u
      XF7k3//7H+C0s6u7IkkSItbJ58t7eT4wg08xkCX4PXGaX+WbQHESXjjH8cgsf2e9iORw2Qaw
      E8iKg3g8ym8unudQV5CPzw9x6uUDXJ9eZn//AELPky7U8Audj86dI+z2MlwocfBgF0OJDPv3
      1/cQtrk3wu3nvfY/4/1KnoHl9zgqX6c3mOc/av8vAUXi87LJZymJua4BRKVod4PuBKn5Sa6P
      JujraWZiJsX+7nZ8QT+Zssn82BADzw5SzFaQTQPZCWOTCfa0tRKNBMjXBLNjIxw9cRKHXQJs
      6gadLt9eqbwTUavgz41TdkTZl/6QI/JVihUJr9eFpeuP3gDud2dIG5v7YbsGsAlh4UvewrN0
      k3hxjBd6a1tXgYQQVKvVLTeHsEwDZBXL0DCFhFOVqdR0PG4XlUoFj8dT988RAkVRsAsYm8cG
      SabUfIBS8wGy5RTdmZ9ubQCmafLTn/6UH/3oR5uMQAiLWxc+punAK6SnR9EtCZ9bxTJ1JMWD
      JQtU2YEkWegG7OvtbijL1HySW1Opbcl/8mAnoaB/W9fY2GyF4Y3z8cLxxo1gwzD467/+a954
      4w16eupdTJIk097eio6Fw+3HI0yqQHdHhPNX5znx4gEmRyeYnZ1g8OjLWJaFZVlblgI3Jpf4
      L7++ui2h+/dE8Hnv3OfJ5slHUZS7+Ps/GMW+r21tALIsc+rUKaBe51pFWAaLy0UkM4Vb0qlZ
      ChGfg8nZZQ4O7mFkZIx4vIVQPE61mEYK70FeqQrdjiRtv10gyzKqandc2Tw8GhrAMwP7MZHr
      df4VJFll4NkXVr61rJ1vaq0fQ+HoeiTRyEMX1sbmYdMgOxVc/eRtrqY9yHqRP/3j7++sVDY2
      O0TDesj+IyfYE/Nz+NChnZTHxuaRIYTASs0iNtRqGhiAhF5IkqkIPG7X1kFsbHYZkiRBKYco
      rK940rBF6fRFGLvyDqmlHvr2du6IgA+TWq3Gn//yM2rG/S87cmhvnO++ZJd4TzJy98FN3xsa
      gOqN8Oabb3Ll+q1HLtSjQAjBp7cWKdXuf7TQ43LcO5DNE0XDNoAwNUaHh2hu79pJeWxsdpSG
      BlDOJNAdQZKJuZ2Ux8ZmR2loAJ5QEy40orH4TspjY7OjbGkAwjL57OItfv+738Ylb9PjzsZm
      F7F1I1iS0QpJfvWrX4EruGUQG5sngS0NQJIkXv/u93Zall3HBxeGKVbuf75u0Ovk5ef7H6FE
      NtulYTdoKTnB3//uIm3tHbxx6valB20AfvnRMGOJ4n2H398esA3gMWPrCTGWzscfn6VasSei
      2jzZbF0FklVOvfoaKStEKbm9TR9sbHYTDatAY0PXuZYwaGtpYnAnJbKx2UEaOsP19PYyNz3N
      zOzsliF0XceyLHRdQ9M0LNNA0zR0w8QwTXTdXszJ5vGnYQngDrfw4sF+ispWUxAF42MjtHV0
      k1xcIB52MzGbp7e/i6WFRSrlAsFYG13tzXUX1K32wXqAyfIN42oQ9gESuO/4H5TtxP9PH13j
      +uTyfYd3OxX+pz88gcPx5Pk0re4D/LBpaAD5xDijExnCPaE7fxTQ0bGHiYlx3D4vqqpgGBYO
      hwrCQtNqDVfj3RCFzT0YX8hx9lbjXXhuJ+BR7VU4tklDAwi1D9DZMUu8fe+WvxfzOUKxOLGA
      m6V0kSNH+pmZnqV9TxetHR3otRqsWO1W6wI9iDU3iqtR2AdI4JGvYfSo49/OM7JpZABC8Nt3
      3sLhCzE9Nc1zz+zb/Lsk0dqxPkegJ1if/9vb17cexut96MLa2Dxsts4qhEViKYUQsJRY2GGR
      bGx2joa+QH/4xz/AtAQvHLeXIbF5ctl6JBiTqxfOU7XAFYjy0vHndlouG5sdoUFrSeGZA/tZ
      SiyQTN1/N5yNzW5jSwOQJAmllsX0NCFMbadlsrHZMRpW8D3RDr75ShfJRXtKpM2TS8OV4W6c
      /4iry06ifheHDjyzs1LZ2OwQDX2B+g8ewWFW0XRj6yA2Nk8AjZdFEQKHy4Ww7DnBNk8uDUaC
      LSYWy3z/zW89EgckG5vHhYauEF98cobEwhzuQJSXTxzdYbFsbHaGhiPB3/ujHxK11/i3ecJp
      YACSrfxPAWcvj/K7i1PbuuZ//N4xYpEtXOR3KQ/N0aeYXmJyIUU0FkeWoVKu0rPXXlf0cWYx
      W+Hz4eS2rvkz48nqFHlojuPLuTIHDuynUshx68oF/NHmhxW1jc0j46EZQCTgZmh4FJcvQP/B
      I+SSC/asL5vHnodWBQrGWwnEWuxuU5tdhSQe4SRSy7IwTXPLKXpVzaBU2Z6jXcjvRlU2x7Uq
      /u2GJ4QgU6hua46sy6ni9zjvOG9Z1pb3kC1WMc37n+SuKjIh/52LDDSKv1ipUdPuv84tSRKR
      gPuOZ9Eo/kpNp1zd3uod4YAbRb7zHexExqcoCrVaDZfLxX8aLjJd/vLtkUdqAPDoH04jA3jY
      adjx3z1+2Jl38LAN4JHPnm70ULRakbGxSbL5+19bs1H8WrnA1FyCdDLJ7Y+kUJZm7ZcAABZH
      SURBVCyAWSGZXk9naXacZL6yrTRmJseZnJm/czUXvUyhapJMrvemCGFw4+bQtuK/F5MjNynr
      66VNPp9/aPGPDt2kZgrmpifIFysPFP9WaczPTDI0NIx2H/u03Su9R2VcX9l8R0OrkM+ViIT9
      zCd1jEqBYj5NIBihUKrg83nI54o43G5ko4IhuXlmcB9bPQa9WmN5OUlVdVKqlSnlCzh9Pipl
      g1o5T29PB5PjSdLpAAP79lKsWYhkgvKySTKVxu104otEqJYKeF0+lssaRw7sR5HXUyuXSwSb
      wkxPjFAo1gjGorT6JaYXs6RNP2EKLEzPsv+F56kk5tEtqBolbl0aR6dGIBQBrQxOH2gFoq17
      aY7dX3+6MHV0S7CUWKKUWSDe3kOtnKdSyDC3XOLoswce+D1YegXDNFlaWmZ+boEOYTE9JxFw
      q2SXkyjuAGhFlksGzx7Yv624K5pB/94mbt4aR3GBR1UolwrEO7pZmLhFrKmVZNEg5PegCINs
      KkHRUDiwv+/ekT8kvsL1MyR8gQBOh0I2kyaTK+ANRAj5HHgDYfRaBVl1IUyDXC6HuEef0p49
      7czNLVCtaYQDXoplnb179xKOhHA4VJraOnCrEkYlSypTYDmTwZQcNMUjdLQ0kcvnqeoWGBqd
      PT3UqmXK5TLWSpYfb2pmcX6Wmm7icykUSiXSyylUbwCvy4nL46MjFsVAsJjO4pJqzM4tEG1q
      JxiO4HFIZHM5ADz+EE0RP+VyhVK5fM8nlV9OUKgJMpllotEIi4tLVGsVUstZLPPLrcC3vJRA
      s2TSy/UxHLfLSXd3N1qt7gns97tJZ3IYem3bcdeqFRYXl5FVgc8fpFIqoAtIJhbw+jwU8gWa
      O/YiWTrVWolMtoCubT+dL8MjbwM0QlgmhUIRp9uDqdWQHU4cqoKiKJSKBVwulamZJJ1dHWDq
      6Cb4fZ4t47IsE5DQNQ1VVShVavi8HiRZxtI1dEvgcDhBWMiShJBksEwsQIL6OaBULOLxepEV
      FWtlM2VVVZEkiVIxD7ITpypR1U08TpVypYrX76dSKuHxeOq5iapgGSaKomCaBqAA9SqAoWuY
      QsLldKAoMoZhAeKeK7kZhoGiqpiGgVarIqtOVEVG16oIScXr2Wr1vvtjY9ysPAtkGcs0wTKp
      6hYyBpLi3Pae0VqtSk038fu8lAoFXB4P5XIFr9dNtVrD7XYjK+qax3GtUkZxunG77uyIWGXX
      NYJtbB4mhmFgmiYlQ2A+BM21DcDmqcZeQ8/mqcY2AJunGtsAbJ5qbAOwearZZADj17/gJ3/1
      M375D79iKXfv/ul7oZfzLOfX4yklp/iL//qX/OLvfsnY7NK24pq+dp6xpdtHC00WF1MA5Jam
      mVjI3Fdcl69c3uKs4N1f/XfOXrjW8DqzViSZaTxyLYTgvfffuy8ZbB4PlB//+Mc/Xv0yeuUs
      B7/xQ44N7uF3731EW9THuQuXMSQXPkVjIZXn+s1hWmNBPvv0M3IVk6Bb4rPPz1GsWURDbq5d
      uszQ8AiyO8jY+dP85osRQqEQsXCQ4tI4WniA33/tOGfee4++7nbOfvoZqVyZ1pYYN69cZGh4
      BF124VU0MmULj2Ixn8yiZZbQ/XH0zBwXL1+jZqnU8nP89Gf/iOLx0dEaA9mFYpY4++kXZEsa
      LU0hbly6zNDwMLrkJhryA3D+/Hn29+9n6MYVhm4NUdAEtdw8v/v4EgODgyh6gYtXrqG4gwQ8
      Khe++IzZxQy56Sv86sxVgqEQPkXjs3MXqZoysUiQ0ZtXuHFrhGSuxIEBeyvU3cIdVaDJsWEu
      nP+CcLyVDz/5nBMnT3Ll/KdUlmf42S9/Q//Aft47/VsGnj1Kz55Wzpz5kOdfPMHC0CWypQI3
      xxOcePEoly+cp6u7m/5nDtPdvj45Zn52issXL+Dwhvjgvfc4+PyLOErzDM+luX5rnBdPnOTq
      55+QTU0zMZfFqhW4NjSxdn0w0kT/vl4++fB9Ym0d9Pbu4/DgPoqpGSbmMrz/3hmeO36CSmKE
      uXSWS1frcd64fP6Om79w8QpHj59g9OZVWjq66O3dx0BfJ5+cu8LJkyc4d/ZDLp49g7+tj4MD
      vXR1ddE3cIiezlbe++Asx0+cZOjyObKJYW4uaJx48Riuu2+MY/OYcYcB+ANB+gaf45UTh1lc
      mOXsJ5/gC0YxkTh56lXiIT81SyEW9OHzeVlOJTj36Vnw+MG0iMabcDmdyDK4nC5cbg8u5/pI
      p9fro72rj+9+8xU0oRD2u2lri5PNFPD6AzidTvweV8NBjo/OnGZhMQVCoDiduFyuTSOhpuzA
      73HR1hQmU6gSicZwuVyb/HpWCYajeNwuVFXG6XLicrnxuGXmp6b45JOzhGLNLOerdLXF8fn8
      uFz1+3G7nCwvzvPZ2U9we0IkF+bpGXgGh9ONYreqdhWbXpfHF6SttZVYNIwkSRw+MIBhSQhZ
      xuFw4XPXFflQXztv//Npvrh0naPPHqay4rOuqk58XjdIEn6fD0+8nfkbnzMyWV9fVHG4aW9v
      o7kphiJLDPa08dY7v+GDixMc7G8nMT3Gmfd/hxRoIhprZfzap7z34VkcDidOtwenqoAQFPI5
      JMWBhAurtsznl66jOFx4XA76OmK8+5vTnB9bpr8jgt9f36nG7/ev3efq581HCb/fB7g4MNiD
      kGRkSeH40UO889Y7nPn4MxzhNpKj57k1Ns2RZw+iGQIhS3Q98xyX3vtHzpw5g+RcT8fm8efu
      I8FCYK34Yd8x4cSy1vYAsyyroUusZZkgyXUfky0wDB1ZVpFlk39667d89zvfWpu8YRoGkqJs
      ulYIC9MUqKqy9t2yQNmQ9Rq6jqyqDdO8NwLLWr/vjf7udb8jGVnefN+WZSKEtEkOm8efx8gV
      QlCrabhc23O4srH5MjxGBmBjs/PY5bXNU809DSCdTt8zEtN8shZLsnl6uKcB6Lq9RZLNk8s9
      DSC3jcnRNja7jYbLo5/98HdkSxruYJz99si+zRPKQ+kFMs36HFgbm91GwypQcXGUn/zsF5z+
      8LOdlMfGZkdpaAAOpxtL/3JLbtjYPO40NADFHaA56kfacikqG5sng4YGUFqew3CFWU4t7KQ8
      NjY7ypa9QEJYZCtQXZ7G37S+y4tWKTI9l0BWnZTzGZy+EPv79u6UrDY2D50Ga4NKNDfHeOmN
      N9GL6yPBDrcXBROvV8GhdmJoOSzLwrKsbS1DbmPzuLClAUgSDF/5gmvLDpqCXnp6egDIL82Q
      qQgCUS/F1Dyq248sywgh7G5Qm11JwxJg/8EjfPKL3+JW2tbOhlq6OdpS/xyLhHdAPBubR0tj
      VwjLon//AKa1ddWm0QQYG5vdxNaNYEvn0/PX0UyIx+I7LZONzY6xdQkgqRw/9jzlcplUanmH
      RbKx2Tm2NABJknB7vcTjccol2xvU5smlYRtAklWK+SwDgwd3Uh4bmx2loQGUU1Oo0b3MTdwi
      VyjtpEw2NjtGQwPwxLrQU2MEwnHSWbsaZPNk0tgdOjmJEu6mWMjT09nWKJiNza6moQE4A3G0
      XILmto6dlMfGZkfZ2gCExTv//D7Fao1TJ1/YYZFsbHaOhiWAZWqUc8u8/buPdlIeG5sdpeGc
      YFOvogsHpl7F5/PdNRJ7TrDNbqWBM5zg2tl/5sqyG4+k88fff3NnpbKx2SEaVoEGn/8aUZdF
      a3v72jkhLKamZ0AI5qYnSGZyOyKkjc2joqE7tFZMgTdOV0fr2llL18jk83QYJXQ8VNMpYqEA
      lmXtkLg2Ng+XBgYAnkg7Czd/jsth0tVRHwdQnG68LgcSEsKyECtr6MuyvLamv43NbqKhARQS
      E7i97WRL2bVzWqWEhEQ6r+NzCxzR1rU5AfbcAJvdSEMD8Dd10bong9sfXDvn9Pjo719dJ9Ge
      EWaz+2lYb9FKGfJVwcL83E7KY2OzozQsAVR3gMGBfvq6bD8gmyeXhgYgyzIfnH6bhQNHeOPU
      iZ2UycbmkWEJwWw2w7WFea7Ozzc2AF2r4ZH9OP2ORkFsbB57hBAs5HNcW1jgyvwcyWKBtmCI
      Q23t/A8nvtbYAOqrPhgsLWYbBbGxeewQQrBULHB9YYHL83Mk8jma/AEOtbXzoxeO0xIIoGzo
      st/aF0gI3vnHX5CzPPzg+79/zy5O2xfI5qvCtCxmshluLSa4sZhgMZ8n6vVxsK2NI+17aAuF
      UO8yRtVghxiLxFKSTKnKbz+M8XuvnHxU8tvYbAvDNJnKpLm2MM/l+TlKtRod4TDPtLTyw+de
      WMvhG2XaQliUclNkFs6TXjjXuAQwTAMh6lUhVW1YUwLsEsDm0SCAUq3GSHKJm4sJhpcWqRoG
      XZEIh1rbOdKxh4DbjXyXGsq6wl8gvXCOSimBN9BJtO0o0bZj994iaWRkmP7+/XcV1DYAmwdF
      CEG+WiVVKrJUKLBYKLBYyLNULFDWNJyqyr54Ewda29jf3IzP6dqewhcTeIN7VhT+OG5/G7K8
      rquN5wNU85w+8ymmZXLk2Ndpbwo1TNQ2AJutEEJQNXTKmk62UmapWGSpkF9T8oquY1qCoNtF
      3OenORCgJRCgJRCk2R/A43DcUZ0RQmDqJSrFBJXCLJXCPJXiApXiPHqtgGVqeIOdRFqPEms/
      htvfvknhb6ehAeRnr/HFgkppYRifN8Ab3/xGw0hsA3iyEEJQMwyqhk5VXz3qVFb+y5pGSdMo
      azVKK59LWo2KrmMJgVj9B9yqisfhJORx0+xfUe4VJfeuKDjS+j5EQgj0Wp5qaZHqimJXCqsK
      nkdYJorDg9vXije4B0+gHY+/DY+/DYcriCSrSNL9O2be1Rs0/el7vPj1UwS9zi/5SG12EtOy
      KK0qZ61GsVajsPJfrFXXjiVNo7qitNaKwq7mh05Fxe1QcasO3A7HiiI78DideB1O4n4fPmcU
      n9OJz+nE63ThcTiQJQl5ZeFkiTudJIUQ6NUs1eIky2sKXv839CLCMnG4grh9LbhXFDvUdGiT
      gsPDW5i5YQkghMVnZ97lw+sL/G//85/dNRK7BHh4CCHQTIOytprjapQ1bT3X1Vdz33quu3re
      WNmkxBICWZJWFNOFz+nE73Lhd7kJuF0EXG78LhcBl2tFaVVkSd6ksFspbiNZLbOGoRUxtCK6
      VsTQCuhaAaNWQNfy6LUCRi1PtZzE1MsIYeJwhXD7WvAE2vD42+u5eKAd1eFHkhXuS8FXShmw
      wLJAbPhHgBBrx7VwG86tHhsagF7KcH0igcuh8szA5p2yLVPn+rXrOHwhBvf1PBEGIABhWRiW
      hW4aGKaGaRqYpo5lGVimjhAGlmlgmhqGqWMYGoaprR1NU8dcORqGjmEZGOb6v2kZGKa56Zxx
      27mqoWGaFgIBoq7UiizjdTjqObCjnhN7HQ68Tgc+pwOvw4kiS8iAhFi7I2nziwas+nH1+4rC
      SJYJwlxRJBNp5XP9aCIJCyxzJayBqZUwa3lMrYAwdCSsehghUGQVVXYiSwoyoCguVNWNyxVG
      dXiQpNv1RGw43K6KYsOpLdRUkkCS7/xfNSBJAm4/yivX1c813CPsH3/9a6r5ZXpf/sEdv5tm
      mXCs644tklb/V3eNuddnyzL5f/7mNyQy5bqAjW50CwzLhLqa3PYQ6x82m7VYuy/TMhGWiRAm
      Yi3HWFEEBJKw1uMUYtPn2+PbbiEsrV2pIKEArgbhpDs+b8wQpbWYVn4VFtIGeaQ7lElaCSvf
      dm7104NubyUhZBkkBSErCEnZ8ruQFJBkhLRRyhUZpM3xNf7tzjCbpRYbft/43u4WtkEVSAjB
      7MQwly9fQo708Puvvbj5d8tgaGgYh9tPX0/XA5cAQghMy2LrMsjG5tFzz3EAIcSW9bHVyyRJ
      eiKqQDZPJ/c0gPtBCIFhGA80L7iRgd3rGtjeNMwHuWb1up24BsCyrB19hjsl44Om9SDXbVe+
      u/s43CeSJKEoymM9Mf5BDWAnWV1g4HHmcZdxu/I9lBLAxma38lBKAIDE/AyVao1IUwfhgOfe
      4RcTtLa03nHeMnSmpqaQnF7Qimg4aYn4SGRKtEa8LCwt07Knh4jfDUAhkyBTcRDxmmRKEl0d
      TXfEubyUIBhvxSFDIZtmMZkkGIqSSqWINDWjFbPoqHgUi3zFZGB/3139TR6UcmYBw9tGcOvO
      H4RlMT01gYEDl2xQqFq0N4dZSqYJR8Ikl1LEW/fQHAtuHcF9IowaI2NTBCJR2po3b4JYzGdx
      +8OoW2SiyUSCaGsrW7X2FmanyZU1ogEPyXSezs52kktJvMEguVQKbyi6aY2p+2F6coyaZtLV
      249Lvfv7MIopsoSJ++9U6ezyEsnlDOFIhKWlFE2t7ZRyKVDcD88AarrJ3p4eRm7dYrKq4/H7
      MbUqkXCAxVSeoN9HvpijWtHwByNIZpnFRAq/z0G5VEVyuvD5g+zd00YkHCBdqiDJPnxoeCJx
      pOUMpaKF6pCYn10kMtgNgKbpZPMlhCYQuBm9eZWScEMtSygco6oLHGgkFheIdz1DcyjCcmqR
      5UyO7r5+luZnaY5FmF3KoyER8TmpGhZex8Nv1OvlPAtLJkpfC4vT4+SzFTwBP1q5gOzyc2Bg
      H7FomPlUAQOZJo+E7I+iJJPkkmm6BwdJTk/DlzQAAMPQkWWFG1cvYchuPIpFpaYjYxFp7yIz
      NwMuL4pVJZMv4fN48XvdpJaXkJ1edK2CR3WTqek8d2iQeDxGemKWQlVjsCvKbM2B16VgFJL4
      Wvsw8gvbllFICn29bVy7dBHhceN3ypR1Bb8bMlmdQMhBMZVEDQYJqg4WKylyfheFbBZPIEgx
      m6b/wGFCkRipVIp0Mse+AwMsTM4RDYdI5Ut32Sd4m+i1MhPj4zi9PvK5HJIkI5DAMsjli8iq
      Qqy5jVg0RsDrAklGlWUq5RJVw0J1uNjb2Y5RzXP15jg+b4BKKU26WKGYTpFIJPAGIihIRGKb
      l2Txu6BiqkhGmXTJQBYWoWgzYb8bVVVRHC56utoxTMHk0FUKukos4K7ntsLk/IVr+P1etGqJ
      ZCaPQ374ub9eLTO/XMLrMJidmaNaM4i3dOBWJQr5fL2f3NS4ePk6fp+PWqVIIltkZugyVeEg
      GPYwPTaGJX95txSBjNfrYWkxQSGfR7DakycTDAVBCAr5HEgyHn+IeDxGcyyEEOBwqOhalXyh
      gqpIdPX0oMoyF86fx+vzI5kao9NL1NLTzC6X8IfjZOYnqNbMbctZKmQZG5vAH/CTzxfqC7Cp
      Knq1hm5qSIqDPc1x2ro7sTQTVVURwiSfyyPLMrGWdoI+N0PXLqFLbkIBBxOj4xiWzuVrw/i8
      /ofXBhCWhQXIkoRlmXUDWGnFW5aFrCibxjWEZSEkCVkC07RQFAVJkurD65ZVb6wKgUCi/rEe
      l2lZqCthYb1xu4ppmpvSuqOLdtVdQJbXfltNTwJMIVAfQZeuEBaGWZf9dpmEZSGQkGXpDlnk
      lWeyUd4v25AXQmCaBrKsAvVxmKXFRZpbWlbSsZAl1mTacCWmKVAUedM9SCvvXIh6+E3PVZYR
      pomkKNuuVq4uubmxq/3240bW063r3+pm7qsDtVu+c7sRbPM08/j2Z9nY7AC2Adg81dgGYPNY
      c/nz9xmaWOSLM28zupDbtBS/sEyGR0a5ef4C5QeM//8HmmlReL8hTV8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='66' name='Sheet 1' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      GiH6Rm71CFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV+tp
      MFwxv83eQYlQYphmYZu2qTI7Pc79Bzmi8SRhv8pQLEi+DpPn0k7VLIRjegpALJ5ge3cX22yg
      hkbJRgzmF7d54eUbrC0tUa5VyW2r3Hz5RZkgw2EyQcYnnJ8g44Rs1culSxdZWF5HVS3amkUk
      oFJt6eiGgT8UJRwwKDfapKMfTbJxlvoBZIKMw2SCjFOqFvMcVBpMTs/SrRVo6ipz12ZYXVlm
      bCKLT7WIREKUyjXgmFlmhHiCegpAejRDevTjH8KZh6/PzF4+tFwqebhBRoizQu4CCVeTAAhX
      kwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhX6ykAlqmzs7ODbtq06hUK5Rpg
      c7C3S7troOs6YNPpdJypVgiH9TQYrlIq4fdpLC4tYXa6BH3QKgVpe8PsLC0TCniI+VX04BDj
      fr9TNQvhmN4aYmJR7i8sMZ4ZJV+2GYoYLKwVuHlzhtVGlWatyM6+xq3XZqQhxmHSEPOJJ9YQ
      M//h+1jBFDpemsVVNioKU+Np7ty7j2KrhCJJzo+HeLC1y4XzY4A0xDhFGmI+8cQaYp67+Tq2
      baMoCkMvxbFtBU1TGBozUTUNBVAUiD+d03AJF+gpAIqiPPw0V5RPUvibCT/BB74QT4TcBhWu
      JgEQriYBEK4mARCuJgEQriYBEK4mARCuJgEQriYBEK4mARCuJgEQrtZTAIxOk3sLywDk1le4
      v7SGZXa4e+c2O/tlyuUSttFhv1B2pFghnNbTYLhO16DTaYDVpNrWSIct7vxykamrc+QeLFNV
      LXZzJhMX57Bt+9C/z3LSvoFe2Hw0Pv1pZNu287UPYNRuP+ruZV/pKQDhaAyvpoJloqheNI9B
      x7DwelRURcHQO7RaNl5NPdXODwPaMU9Rz1ljWZbj/QCD+dBxfps/sQCU9neoVmtsF7t4rAp7
      RZXr16ZYvDdPJJYm7osxlIiyvbfPZGYU27ZP3BDTS5PDSSmKMpD19IOmaY4HQFH7P25dVVTH
      t3kv26GnACSHz/H54XMf/TDyySR4N56LH1puMhPpZTVC9I3cBRKuJgEQriYBEK4mARCuJgEQ
      riYBEK4mARCuJgEQrtaHANg06jUM0/r4mY19ev6mEA5w/MGY9fwWa6UutmUSDmgkgz7qaoTz
      I0mnVyVEzxw/AuxV2lyZnSGgKjQqBebX80wMJ5xejRCOcDwA6bCXlY0tWrpJIJLk0kSazb2i
      06sRwhGOnwIlxrNolQq+zDk0xcbj8dDt6k6vRghH9OXh+NH44VMen893aIKMkwyHBvj9l6Zp
      d/s3UcbESOLEkyucpu4rk8PoVv9usKWj/hNPNnKauoN+H3/w6kyv5X2qaDjg+DZXFIUvvjKD
      ZZ2+L0CxB9gRYprmifsBzhrTNJ/K3oGnte5fdY71u/aBfg/gdAPHIDlV+6A70Jyse9DNc4PY
      Xwa6R/76hBqPp82dX9xlfTPHAKazOuSz6m4UtriznKNRyHFQf/R7j2KhiA1sbW4cen353ofs
      HFQ+c/1Gp0m53jpVzfDZdWMb3P3wQ+4vPTjyFEJvN6nWW1R2Nqj92q9ltUu8+97tE9VQKBRO
      UzLgxL5y2Mqd98mVGg9/towuxUqtH9cA/WRSLtcIxCJsbG0wnRlheaNAZX+N4XNZigcHoGpE
      I0GMbgc1mKBb2UXHx9Vr1/B5+pd30zColWtUvR7abR9bKzsomo+IV6dp+mmU8kxeukohv8PB
      zhbZ52+R8lsYtka5kCfYKbBaqtOotPEFA5xLBKg02gyNpFle2mJ6cgQrkCC3cp/ocAavWWcr
      X+H5F17Ap/Wyo5g0mx2y56cp7m6wU6oTCEXxezT8nTYtP+TzTTIxlb3SPQLeAFcvTbO5mWck
      4aXasXhw+z1qDZ1kwk90eJpiPoc3EMFvNun6ovhVE71Zpdg0mBgbYnN9nWB6nJnMiGPb/9PY
      lo7uDdPd3cZbV9ipdJmZzFCutZ6+oRBjmSwXZ7LonQ62ZdJsdYgmR8gkvQTTE6SjXipti0uX
      L9NtlihXGgT9fswBHL+nZiZZe7BOo1pleGKasGqjq36uzc0yPDzK2FCKSCLNlakRml1oFrbY
      K7fZ28vT6RpkL82SjKVJxkIUiiVC4RC2qTMyMUMq4qWjN1B9Kc6fG6ZcqaFYOobZ4+9le3jh
      lZfZ3Vhmp1jnytwceqtOu92h02wRiMY5lxnH7/MxPTuHTzUAm/2DPPVqmdz2HpFEmpFUiouz
      WSoHBbqmikdTUbxB5i5O0263KddaXLl0kVqlSCQaoV5rfGZpTmmUdskfVNjZyxNODhP0GJQr
      DTrd9mAvgnuns3B3CTUQZCQZIV8oE0kME/QpJGJRNtfXMNUA3UYRW/UxNjFJq7RHrQszU5No
      fWz67jarGJ4ItfwGofQ4hZ0NtECUWNhPLJagWtyjpqtEg17CXmh7EpiNEpFEgnatimGa+GMx
      muUGqgc8ts52vsTY+BiW7SHiNWmYHhrFXSxPGKtdpmt7yGan8PZyBLB0FhcWUQIxJscSrG9u
      kx6doFXeo17Xmbo8w/bqGqmhNMFYina9TDwaplhtk4qHKZaqaBrYhkUkHqDRUijt51D9EeLh
      ILFEnGKxQNjvYSO3TyoZoVRpEE8NM5KKOfcH+BS1UpFAIoVRK9LQbUqFAmOZCXTD5P8BtFD5
      ooYjtroAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      Aom+9v8BaNR1IkzYDzEAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
